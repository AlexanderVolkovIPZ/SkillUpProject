security:
  enable_authenticator_manager: true
  # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
  password_hashers:
    Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
  # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
  providers:
    # used to reload user from session & other features (e.g. switch_user)
    app_user_provider:
      entity:
        class: App\Entity\User
        property: email
    # used to reload user from session & other features (e.g. switch_user)
  firewalls:
    login:
      pattern: ^/api/login
      stateless: true
      user_checker: App\Security\LoginChecker
      json_login:
        check_path: /api/login
        success_handler: lexik_jwt_authentication.handler.authentication_success
        failure_handler: lexik_jwt_authentication.handler.authentication_failure
    api:
      pattern: ^/api
      stateless: true
      jwt: ~

  access_control:
    - { path: ^/api/docs,  roles: PUBLIC_ACCESS }
    - { path: ^/api/login, roles: PUBLIC_ACCESS }
    - { path: ^/api/users,  roles: PUBLIC_ACCESS }
    - { path: ^/api/registration, roles: PUBLIC_ACCESS }
    - { path: ^/api/task-file/.*$, roles: PUBLIC_ACCESS }
    - { path: ^/api/task-user-file/.*$, roles: PUBLIC_ACCESS }
    - { path: ^/api/confirm-registration/.*$, roles: PUBLIC_ACCESS }
    - { path: ^/api/user-courses,       roles: IS_AUTHENTICATED_FULLY }
    - { path: ^/api/user-course/.*$,       roles: IS_AUTHENTICATED_FULLY }
    - { path: ^/api/tasks-by-course/.*$,  roles: IS_AUTHENTICATED_FULLY }
    - { path: ^/api/task-create,  roles: IS_AUTHENTICATED_FULLY }
    - { path: ^/api/task-update/.*$, roles: IS_AUTHENTICATED_FULLY }
    - { path: ^/api/task-delete/.*$, roles: IS_AUTHENTICATED_FULLY }
    - { path: ^/api/task-user-create, roles: IS_AUTHENTICATED_FULLY }
    - { path: ^/api/task-user-delete/.*$, roles: IS_AUTHENTICATED_FULLY }
    - { path: ^/api,       roles: IS_AUTHENTICATED_FULLY }

    #- { path: ^/api/user,  roles: PUBLIC_ACCESS }
    #- { path: ^/api/tasks,  roles: PUBLIC_ACCESS }
    #- { path: ^/api/tasks/.*$,  roles: PUBLIC_ACCESS }
    #- { path: ^/api/courses/.*$,  roles: PUBLIC_ACCESS }
    #- { path: ^/api/task_users,  roles: PUBLIC_ACCESS }


